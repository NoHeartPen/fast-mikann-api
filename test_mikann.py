import unittest

from mikann import analyze_text, _cursor_word


class TestCursorWord(unittest.TestCase):
    def test_analyze_short_unit_words(self):
        # 测试不符合 UniDic 的「短単位」（Short Unit Word(s)）标准，但大多数辞书都有作为单独词条收录的测试用例
        test_cases = [
            # 这部分是 UniDic 未收录，而 Sudachi 已收录能正常解析
            (
                "初めまして",
                [
                    ["初めまして", "初めまして"],
                ],
            ),
            (
                # ７号室に首をつった人影が==ぼうっと==浮かび上がって　ゆらゆら揺れてたんだって
                # テレビアニメ「氷菓」第７話
                "人影がぼうっと浮かび上がって",
                [
                    ["人影", "人影"],
                    ["が", "が"],
                    ["ぼうっと", "ぼうっと"],
                    ["浮かび上がっ", "浮かび上がる"],
                    ["て", "て"],
                ],
            ),
            (
                # ==抗がん剤==の副作用がわかる本、世界のエッセンシャルドラッグ、ようこそダウン症の赤ちゃん、ぼくの手，おちゃわんタイプや、龍平の現在
                # 抗癌剤・こうがんざい
                # <https://ja.wikipedia.org/wiki/%E4%B8%89%E7%9C%81%E5%A0%82>
                "抗がん剤の副作用がわかる本、",
                [
                    ["抗がん剤", "抗癌剤"],
                    ["の", "の"],
                    ["副作用", "副作用"],
                    ["が", "が"],
                    ["わかる", "分かる"],
                    ["本", "本"],
                    ["、", "、"],
                ],
            ),
            (
                # ほとんど==事後承諾==だったけどな
                "事後承諾だったけどな",
                [
                    ["事後承諾", "事後承諾"],
                    ["だっ", "だ"],
                    ["た", "た"],
                    ["けど", "けれど"],
                    ["な", "な"],
                ],
            ),
            (
                # なぜ こんな所で==痴話ゲンカ==を…
                # 痴話喧嘩・ちわげんか
                #  テレビアニメ「負けヒロインが多すぎる」第1話
                "なぜこんな所で痴話ゲンカを",
                [
                    ["なぜ", "何故"],
                    ["こんな", "こんな"],
                    ["所", "所"],
                    ["で", "で"],
                    # FIXME 痴話ゲンカ 未登录词
                    # UniDic 未登录
                    ["痴話ゲンカ", "痴話喧嘩"],
                    ["を", "を"],
                ],
            ),
            # 接下来是 SudachiDict 中也尚未登录的词条测试用例
            (
                # 先輩の路上ライブ見て==ひと目ぼれ==したの
                # 一目惚れ・ひとめぼれ
                # テレビアニメ『ぼっち・ざ・ろっく！ 』第3话「馳せサンズ」
                "先輩の路上ライブ見てひと目ぼれしたの",
                [
                    ["先輩", "先輩"],
                    ["の", "の"],
                    ["路上", "路上"],
                    ["ライブ", "ライブ"],
                    ["見", "見る"],
                    ["て", "て"],
                    # FIXME ひと目ぼれ 未登录词
                    # 正确的解析结果：["ひと目ぼれ", "一目惚れ"],
                    ["ひと目", "一目"],
                    ["ぼれ", "惚れ"],
                    ["し", "為る"],
                    ["た", "た"],
                    ["の", "の"],
                ],
            ),
            (
                # ==晴れて==メンバーが勢ぞろいしたのでした
                # ぼっち・ざ・ろっく！ 第03话「馳せサンズ」
                "晴れてメンバーが勢ぞろいしたのでした",
                [
                    # FIXME 晴れて 未登录词
                    # 正确的解析结果：["晴れて", "晴れる"],
                    ["晴れ", "晴れる"],
                    ["て", "て"],
                    ["メンバー", "メンバー"],
                    ["が", "が"],
                    ["勢ぞろい", "勢揃い"],
                    ["し", "為る"],
                    ["た", "た"],
                    ["の", "の"],
                    ["でし", "です"],
                    ["た", "た"],
                ],
            ),
            (
                # 会えない日が続くと　胸が==グッと==重くなったりしないか？
                # ヴァイオレット・エヴァーガーデン
                # 关于这个测试用例，可以参考正常测试用例的「人影が==ぼうっと==浮かび上がって」
                "胸がグッと重くなったりしないか",
                [
                    ["胸", "胸"],
                    ["が", "が"],
                    # FIXME グッと 未登录词
                    # 正确的解析结果：["グッと", "ぐっと"],
                    ["グッ", "ぐっ"],
                    ["と", "と"],
                    ["重く", "重い"],
                    ["なっ", "成る"],
                    ["たり", "たり"],
                    ["し", "為る"],
                    ["ない", "ない"],
                    ["か", "か"],
                ],
            ),
        ]
        for test_text, expected_output in test_cases:
            with self.subTest(cursor_index=test_text, expected_output=expected_output):
                self.assertEqual(analyze_text(test_text), expected_output)

    def test_cursor_word(self):
        # 0晩1ご2飯3を4食5べ6ま7し8た9か10。11
        test_cases = [
            # (光标索引, 期望的输出)
            # 光标在"晩御飯"之前
            (0, "晩御飯"),
            (1, "晩御飯"),
            (2, "晩御飯"),
            (3, "晩御飯"),
            (4, "を"),
            (5, "食べる"),
            (6, "食べる"),
            (7, "ます"),
            (8, "ます"),
            (9, "た"),
            (10, "か"),
            (11, "。"),
            # 异常测试
            # FIXME (12,  "。"),
            # FIXME  (1111,  "。"),
        ]
        for cursor_index, expected_output in test_cases:
            with self.subTest(
                cursor_index=cursor_index, expected_output=expected_output
            ):
                result = analyze_text("晩ご飯を食べましたか。")
                if cursor_index > sum(len(key) for key in result):
                    # 如果光标位置超出范围，检查是否抛出异常
                    with self.assertRaises(ValueError):
                        _cursor_word(result, cursor_index)
                else:
                    self.assertEqual(
                        _cursor_word(result, cursor_index), expected_output
                    )


if __name__ == "__main__":
    unittest.main()
